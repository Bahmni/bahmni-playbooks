- name: Check if bahmni-reports rpm needs an update
  command: yum list installed bahmni-reports
  register: installed_bahmni_reports
  ignore_errors: true

- name: Uninstall bahmni-reports rpm
  yum: name="bahmni-reports" state=absent
  when: installed_bahmni_reports.stdout.find("{{ bahmni_reports_version }}") == -1

- name: Install bahmni-reports from bahmni-repo
  yum: name="bahmni-reports-{{ bahmni_reports_version }}" state=present

- name: Stop bahmni-reports
  systemd:
    name=bahmni-reports
    state=stopped
  when: passive is not defined or passive != 'yes'
  tags: stop_bahmni

- name: Copy bahmni-reports config
  template:
    src=bahmni-reports.conf.j2
    dest=/opt/bahmni-reports/etc/bahmni-reports.conf
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy bahmni-reports properties
  template:
    src=bahmni-reports.properties.j2
    dest=/opt/bahmni-reports/etc/bahmni-reports.properties
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Make sure reports save directory exists
  file: path={{item}} owner={{ bahmni_user }} group={{ bahmni_group }} mode=0755 state=directory
  with_items:
    - "{{reports_save_dir}}"

- block:

    - name: Get matched IpTable rule
      shell: iptables -nL --line-numbers | grep BAHMNIREPORTS  -m 1 | cut -c 1-2
      register: matchedRule

    - name: delete matching rule if exists
      shell: iptables -D INPUT {{ matchedRule.stdout }}
      when: matchedRule.stdout!=""

    - name: Allow bahmni-reports port through firewall
      command: /sbin/iptables -I INPUT 1 -p tcp --dport  {{ bahmni_reports_port }} -j ACCEPT -m comment --comment "BAHMNIREPORTS"

    - name: save iptables
      command: /usr/libexec/iptables/iptables.init save
  when: docker is not defined

- name: Switch off chkconfig for bahmni-reports on passive
  systemd: name=bahmni-reports state=stopped enabled=no
  when: passive is defined and passive == 'yes'

- name: Start bahmni-reports and enable at boot
  systemd:
    name=bahmni-reports
    enabled=yes
    state=started
  when: passive is not defined or passive != 'yes'
  tags: start_bahmni

- name: copy bahmni_reports_ssl conf file
  template:
      src=bahmni_reports_ssl.conf.j2
      dest=/etc/httpd/conf.d/bahmni_reports_ssl.conf
      mode=644
      force=yes
      owner={{ bahmni_user }}
      group={{ bahmni_group }}
  delegate_to: "{{ item }}"
  with_items: "{{groups['bahmni-emr']}}"

- name: Install crontab
  yum: name=crontabs state=present

- name: Remove crontab job for reports directory
  cron: name="sync_reports_cron" user=root state=absent

- name: create a cron tab to sync reports directory
  cron:
    name="sync_reports_cron"
    minute="*/1"
    user=root
    job="rsync -rh --progress -i --itemize-changes --update --rsync-path='sudo rsync' -pog {{reports_save_dir}} -e 'ssh -o StrictHostKeyChecking=no' {{bahmni_support_user}}@{{item}}:{{reports_save_dir}}/../"
  when: "{{ (passive is not defined or passive != 'yes') and hostvars[item].get('passive') | default('') == 'yes' }}"
  with_items: "{{groups['bahmni-reports']}}"
