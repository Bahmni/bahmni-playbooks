- name: Fetch mysql dump from master machine to ansible host machine
  fetch: src=/opt/mysql-replication/mysql_dump.sql.gz dest=/tmp/ flat=yes fail_on_missing=yes
  sudo: no
  delegate_to: "{{ groups['bahmni-emr-db'][0] }}"

- name: Copy mysql dump from ansible host machine to slave machine
  copy:
    src=/tmp/mysql_dump.sql.gz
    dest=/opt/mysql-replication/
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Remove mysql_dump.sql.gz in ansible host machine
  local_action: file path=/tmp/mysql_dump.sql.gz state=absent
  ignore_errors: true

- name: Import mysql dump from master to slave db
  shell: gunzip -c /opt/mysql-replication/mysql_dump.sql.gz | mysql -u{{ mysql_root_user }} -p{{ mysql_root_password }}

- name: get the current master server's replication status
  mysql_replication:
     mode: getmaster
     login_user: "{{ mysql_root_user}}"
     login_password: "{{ mysql_root_password }}"
  delegate_to: "{{ groups['bahmni-emr-db'][0] }}"
  register: repl_stat

- name: get the current master server's replication status
  mysql_replication:
     mode: getmaster
     login_user: "{{ mysql_root_user}}"
     login_password: "{{ mysql_root_password }}"
  delegate_to: "{{ groups['bahmni-reports-db'][0] }}"
  when: "{{ groups['bahmni-reports-db'] | length }} > 0"
  register: repl_stat_reports

- name: change master parameters on slave to start the replication
  mysql_replication:
    mode: changemaster
    master_host: "{{ groups['bahmni-emr-db'][0] }}"
    master_user: "{{ mysql_replication_username }}"
    master_password: "{{ mysql_replication_password }}"
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    master_log_file: "{{ repl_stat.File }}"
    master_log_pos: "{{ repl_stat.Position }}"
  ignore_errors: True

- name: change master parameters on slave to start the replication
  mysql_replication:
    mode: changemaster
    master_host: "{{ groups['bahmni-reports-db'][0] }}"
    master_user: "{{ mysql_replication_username }}"
    master_password: "{{ mysql_replication_password }}"
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    master_log_file: "{{ repl_stat_reports.File }}"
    master_log_pos: "{{ repl_stat_reports.Position }}"
  when: "{{ groups['bahmni-reports-db'] | length }} > 0"
  ignore_errors: True

- name: start replication
  mysql_replication:
   mode: startslave
   login_user: "{{ mysql_root_user}}"
   login_password: "{{ mysql_root_password }}"

- name: Restart mysql server to reflect the changes
  systemd: name=mysqld state=restarted enabled=true
