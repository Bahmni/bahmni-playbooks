---
- name: Install libselinux-python
  yum: name=libselinux-python state=present

- name: add bahmni yum repo
  template: src=bahmni.repo.j2 dest=/etc/yum.repos.d/bahmni.repo

- name: Install EPEL repo.
  yum:
    name: "epel-release"
    state: present

- name: Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present

- name: Install ntp
  yum: name=ntp state=present
  tags: ntp

- name: Fail if timezone is not provided
  fail:
   msg: "Please specify timezone to be set to the server by adding value for key 'timezone' in /etc/bahmni-installer/setup.yml.
      Example, timezone: Asia/Kolkata. Take a look at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for available timezones "
  when: timezone is not defined
  tags: ntp

- name: Check if timezone exists
  stat: path=/usr/share/zoneinfo/{{ timezone }}
  register: timezone_exists
  tags: ntp

- name: Fail if provided timezone does not exist
  fail: msg="Timezone specified in /etc/bahmni-installer/setup.yml is incorrect. Example - Asia/Kolkata. Take a look at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for available time zones"
  when: timezone_exists.stat.exists == False
  tags: ntp

- name: Set the correct timezone.
  file: src=/usr/share/zoneinfo/{{ timezone }}  dest=/etc/localtime state=link force=yes
  tags: ntp

- name: start and enable ntpd
  systemd: name=ntpd state=started enabled=yes
  tags: ntp

- name: install utils
  yum: name={{ item }} state=present
  with_items:
    - tree
    - htop
    - lsof
    - wget
    - unzip
    - python-pip
    - rsync
  tags: utils

- name: Check if pip is installed with required version
  command: pip --version
  register: pipVersion

- name: Upgrade pip to latest vesion
  pip:
    name: pip=={{odoo_pip_version}}
    extra_args: --upgrade
  when:  pipVersion.stdout.find("{{ odoo_pip_version }}") == -1

- name: Check if setup tools is installed with required version
  command: pip show setuptools | grep Version
  register: setupToolsVersion

- name: Upgrade setup tools to latest vesion
  pip:
    name: setuptools=={{odoo_setuptools_version}}
    extra_args: --upgrade
  when: setupToolsVersion.stdout.find("{{ odoo_setuptools_version }}") == -1


